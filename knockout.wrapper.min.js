// knockout.wrapper.js - Watch observables inside of functions for knockout.js
// (c) Tim Hall - https://github.com/timhall/knockout.wrapper - License: MIT

!function(a,b){"object"==typeof exports?module.exports=b(require("knockout")):"function"==typeof define&&define.amd?define(["knockout"],b):b(a.ko)}(this,function(a){"use strict";if(a){var b=(a.wrapper=function(c,d){if("function"!=typeof c)throw new Error("Pass a function to wrap");var e,f=function(){var a,g=Array.prototype.slice.call(arguments);return d=d||this,e&&e.dispose(),e=b(function(){a=c.apply(d,g)}).subscribe(function(){f.notifySubscribers(void 0,"change")}),a};return a.subscribable.call(f),f},function(b,c){function d(){}function e(){try{a.dependencyDetection.begin(function(a){g(a)}),b.call(c)}finally{a.dependencyDetection.end()}}function f(){d.notifySubscribers()}function g(a){h.push(a.subscribe(f))}var h=[];if(c=c||this,"function"!=typeof b)throw new Error("knockout.wrapper: watcher() requires a function to watch");d.dispose=i,a.subscribable.call(d);var i=function(){a.utils.arrayForEach(h,function(a){a.dispose()}),h=[]};return e(),d});return function(){function b(a,b){for(var c in a)if(a.hasOwnProperty(c)&&a[c]&&a[c][b])return a[c]}function c(a,b){for(var c in a)if(a.hasOwnProperty(c)&&a[c].toString().indexOf(b)>=0)return c}function d(a,b,d){return a[b]||a[c(a,d)]}a.dependencyDetection||(a.dependencyDetection=b(a,"end"),a.dependencyDetection.begin=d(a.dependencyDetection,"begin","]})"),a.dependencyDetection.registerDependency=d(a.dependencyDetection,"registerDependency","))}"),a.dependencyDetection.ignore=d(a.dependencyDetection,"ignore",".pop()}}"))}(),a.wrapper}});